def write_test_case_block(ws, test_case_id, test_cases):
    # Set column widths
    ws.column_dimensions['A'].width = 25
    ws.column_dimensions['B'].width = 60

    # Filter rows matching test_case_id
    case_rows = test_cases[test_cases['Test Case ID'] == test_case_id]

    if not case_rows.empty:
        # Write Test Case Information header with test case ID
        ws.append([f"Test Case Information â€“ {test_case_id}"])

        header_cell = ws.cell(row=ws.max_row, column=1)
        header_cell.font = Font(bold=True, color="000000")
        header_cell.fill = PatternFill("solid", fgColor="D2D69E")
        ws.merge_cells(start_row=ws.max_row, start_column=1, end_row=ws.max_row, end_column=2)
        header_cell.alignment = Alignment(horizontal="left", vertical="center", wrap_text=True)

        # Write Test Case Description once
        test_case_description = case_rows.iloc[0].get("Test Case Description", "")
        ws.append(["Test Case Description", test_case_description])
        ws.append([])

        # Write Step Table Header
        ws.append(["Step Number", "Test Step", "Expected Result", "Result"])
        header_row = ws.max_row
        for col in range(1, 5):
            cell = ws.cell(row=header_row, column=col)
            cell.font = Font(bold=True)
            cell.fill = PatternFill("solid", fgColor="D2D69E")
            cell.alignment = Alignment(horizontal="center", vertical="center", wrap_text=True)

        # Write each test step row
        for _, row in case_rows.iterrows():
            ws.append([
                row.get("Step Number", ""),
                row.get("Test Step", ""),
                row.get("Expected Result", ""),
                row.get("Result", "")
            ])

        ws.append([])  # Empty row for spacing