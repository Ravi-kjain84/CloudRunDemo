let
    // Step 1: Load the data
    Source = Testing_QA_Resources_list,
    #"Selected Columns" = Table.SelectColumns(Source, {"Employee ID", "Employee Manager Id"}),
    #"Removed Duplicates" = Table.Distinct(#"Selected Columns"),
    #"Renamed Columns" = Table.RenameColumns(#"Removed Duplicates", {{"Employee ID", "EmployeeID"}, {"Employee Manager Id", "ManagerID"}}),

    // Step 2: Define a recursive function to get all reportees
    GetAllReportees = (manager as text) as list =>
        let
            DirectReports = Table.SelectRows(#"Renamed Columns", each [ManagerID] = manager)[EmployeeID],
            IndirectReports = List.Combine(List.Transform(DirectReports, each @GetAllReportees(_))),
            Combined = List.Distinct(List.Combine({DirectReports, IndirectReports}))
        in
            Combined,

    // Step 3: Prepare distinct list of managers
    DistinctManagers = List.RemoveNulls(List.Distinct(#"Renamed Columns"[ManagerID])),

    // Step 4: Create output table
    ReporteeSummary = List.Transform(
        DistinctManagers,
        each [
            ManagerID = _,
            DirectReportees = List.Count(Table.SelectRows(#"Renamed Columns", each [ManagerID] = _)[EmployeeID]),
            TotalReportees = List.Count(GetAllReportees(_)),
            IndirectReportees = List.Count(GetAllReportees(_)) - List.Count(Table.SelectRows(#"Renamed Columns", each [ManagerID] = _)[EmployeeID])
        ]
    ),
    
    // Step 5: Convert to table
    OutputTable = Table.FromRecords(ReporteeSummary)

in
    OutputTable