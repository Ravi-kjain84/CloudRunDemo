import re
import pandas as pd

def parse_outlook_preserve_order(text_path, output_excel="outlook_sequenced_output.xlsx"):
    with open(text_path, 'r', encoding='utf-8') as f:
        content = f.read()

    entries = [entry.strip() for entry in content.split(';') if entry.strip()]

    final_data = []

    for idx, entry in enumerate(entries, 1):
        serial = idx
        emp_id = ""
        name = ""
        email = ""

        # Match format: Name <email>
        match = re.match(r'^(.*)<(.*)>$', entry)
        if match:
            name = match.group(1).strip()
            email = match.group(2).strip()

            # Attempt to extract numeric ID from email prefix if available
            prefix = email.split('@')[0]
            id_match = re.match(r'^(\d{5,})', prefix)
            if id_match:
                emp_id = id_match.group(1)

        elif re.fullmatch(r'\d+', entry):  # Unresolved numeric ID
            emp_id = entry

        final_data.append({
            "SerialNumber": serial,
            "EmployeeID": emp_id,
            "Name": name,
            "Email": email
        })

    # Convert to DataFrame
    df = pd.DataFrame(final_data)

    # Write to Excel
    df.to_excel(output_excel, index=False, engine='openpyxl')
    print(f"[Success] Output written to: {output_excel}")

# Example usage
parse_outlook_preserve_order("input_outlook_list.txt")