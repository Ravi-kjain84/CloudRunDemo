def resolve_user_by_id(self, emp_id):
    try:
        # Step 1: Resolve recipient normally
        recipient = self.namespace.CreateRecipient(emp_id)
        recipient.Resolve()

        if not recipient.Resolved:
            print(f"[SKIPPED] Cannot resolve: {emp_id}")
            return None

        address_entry = recipient.AddressEntry
        if address_entry.Type != "EX":
            print(f"[SKIPPED] Not an Exchange user: {emp_id}")
            return None

        user = address_entry.GetExchangeUser()
        if not user:
            print(f"[SKIPPED] No ExchangeUser object: {emp_id}")
            return None

        # Step 2: Basic filtering (quick)
        if 'other' in user.Name.lower():
            print(f"[SKIPPED] Name contains 'Other': {user.Name}")
            return None

        if not user.JobTitle or user.JobTitle.strip() == "":
            print(f"[SKIPPED] Probably shared/delegate (no title): {emp_id}")
            return None

        return user

    except Exception as e:
        print(f"[ERROR] Exception while resolving {emp_id}: {e}")
        return None